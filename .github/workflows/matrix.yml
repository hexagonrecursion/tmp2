name: General build matrix

on:
  - push
  - pull_request

jobs:
  varied_builds:
    strategy:
      fail-fast: false
      matrix:
        include:
          - compiler: clang++-10
            os: ubuntu-20.04
            tiles: 0
            sound: 0
            cmake: 0
            localize: 1
            test-stage: 1
            native: linux64
            pch: 1
            archive-success: basic-build
            dont_skip_data_only_changes: 1
            title: Basic Build and Test (Clang 10, Ubuntu, Curses)
            # ~190MB in a clean build
            # ~30MB compressed
            # observed usage: 3.0GB -> 300MB
            ccache_limit: 2G
            ccache_key: linux-llvm-10-break1

          - compiler: clang++
            os: macos-12
            cmake: 0
            native: osx
            pch: 0
            tiles: 1
            sound: 1
            localize: 1
            title: Clang 14, macOS 12, Tiles, Sound, x64 and arm64 Universal Binary
            # cache size ??? to be observed
            ccache_limit: 4G
            ccache_key: macos-llvm-14-universal-break1

          - compiler: g++-9
            os: ubuntu-latest
            cmake: 0
            tiles: 0
            sound: 0
            localize: 1
            gold: 1
            lto: 1
            libbacktrace: 1
            native: linux64
            pch: 1
            title: GCC 9, Curses, LTO
            # ~850MB in a clean build
            # ~370MB compressed
            # observed usage: 4.0GB -> 1.5GB
            ccache_limit: 3G
            ccache_key: linux-gcc-9-lto

          - compiler: clang++-12
            os: ubuntu-22.04
            cmake: 0
            tiles: 1
            sound: 0
            localize: 1
            native: linux64
            pch: 1
            sanitize: address
            cxxflags: --gcc-toolchain=/opt/mock-gcc-11
            mods: --mods=magiclysm
            dont_skip_data_only_changes: 1
            title: Clang 12, Ubuntu, Tiles, ASan
            # ~390MB in a clean build
            # ~50MB compressed
            # observed usage: 4.0GB -> 400MB
            ccache_limit: 3G
            ccache_key: linux-llvm-12-asan

          - compiler: g++-11
            os: ubuntu-latest
            cmake: 0
            tiles: 0
            sound: 0
            localize: 1
            native: linux64
            pch: 1
            sanitize: address
            title: GCC 11, Ubuntu, Curses, ASan
            # ~480MB in a clean build
            # ~50MB compressed
            # observed usage: 4.4GB -> 400MB
            ccache_limit: 4G
            ccache_key: linux-gcc-11-asan

          - compiler: g++
            os: ubuntu-latest
            cmake: 0
            native:
            pch: 1
            tiles: 1
            sound: 1
            localize: 1
            libbacktrace: 1
            title: GCC 12, Ubuntu cross-compile to MinGW-Win64, Tiles, Sound
            ldflags: -static-libgcc -static-libstdc++
            mxe_target: x86_64-w64-mingw32.static.gcc12
            wine: wine
            # ~285MB in a clean build
            # ~36MB compressed
            # observed usage: 3.0GB -> 350MB
            ccache_limit: 2G
            ccache_key: mingw-gcc-12

          - compiler: g++-9
            os: ubuntu-latest
            cmake: 1
            tiles: 1
            sound: 1
            localize: 0
            native: linux64
            pch: 1
            title: GCC 9, Ubuntu, Tiles, Sound, CMake
            # ~180MB in a clean build
            # ~25MB compressed
            # observed usage: 3.0GB -> 300MB
            ccache_limit: 2G
            ccache_key: linux-gcc-9-cmake

          # Reserving space for msvc ccache & vcpkg cache
            # observed usage:
            # vcpkg: ??? -> 500MB
            # ccache: 8GB -> 1.0GB

    name: ${{ matrix.title }}
    runs-on: ${{ matrix.os }}
    env:
        ZSTD_CLEVEL: 17
        CMAKE: ${{ matrix.cmake }}
        COMPILER: ${{ matrix.compiler }}
        MXE_TARGET: ${{ matrix.mxe_target }}
        WINE: ${{ matrix.wine }}
        OS: ${{ matrix.os }}
        TILES: ${{ matrix.tiles }}
        SOUND: ${{ matrix.sound }}
        LOCALIZE: ${{ matrix.localize }}
        MODS: ${{ matrix.mods }}
        SANITIZE: ${{ matrix.sanitize }}
        TEST_STAGE: ${{ matrix.test-stage }}
        CXXFLAGS: ${{ matrix.cxxflags }}
        LDFLAGS: ${{ matrix.ldflags }}
        EXTRA_TEST_OPTS: --error-format=github-action
        NUM_TEST_JOBS: ${{ matrix.num_test_jobs }}
        NATIVE: ${{ matrix.native }}
        PCH: ${{ matrix.pch }}
        GOLD: ${{ matrix.gold }}
        LTO: ${{ matrix.lto }}
        LIBBACKTRACE: ${{ matrix.libbacktrace }}
        RELEASE: 1
        ARCHIVE_SUCCESS: ${{ matrix.archive-success }}
        CCACHE_LIMIT: ${{ matrix.ccache_limit }}
        CCACHE_FILECLONE: true
        CCACHE_HARDLINK: true
        CCACHE_NOCOMPRESS: true
        SKIP: ${{ ( false == true && matrix.title != 'Basic Build and Test (Clang 10, Ubuntu, Curses)' ) || ( matrix.dont_skip_data_only_changes == 0 && needs.skip-duplicates.outputs.should_skip_code == 'true' ) || ( matrix.dont_skip_data_only_changes != 0 && needs.skip-duplicates-mods.outputs.should_skip_data == 'true' ) }}
        SKIP_TESTS: ${{ needs.matrix-variables.outputs.skip_tests }}
    steps:
    - run: |
        echo "foo" > foo.txt
      if: ${{ always() }}
    - uses: actions/upload-artifact@v4
      if: ${{ always() }}
      with:
        name: ${{ matrix.title }}
        path: tests/cata_test*
        if-no-files-found: ignore
